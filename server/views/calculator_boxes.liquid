{% layout "main" %}
{% block %}
    <section class="text-gray-700 body-font overflow-hidden bg-white">
    <div class="container px-5 py-24 mx-auto">
        <div class="lg:w-4/5 mx-auto flex flex-wrap">
            <img alt="ecommerce" class="lg:w-1/2 w-full object-cover object-center rounded border border-gray-200" src='./img/cajas-de-carton.webp'>
            <div class="lg:w-1/2 w-full lg:pl-10 lg:py-6 mt-6 lg:mt-0">
                <h1 class="text-gray-900 text-3xl title-font font-medium mb-1">Cotizador de cajas de cartón</h1>
                <div class="flex mb-4">
                <span class="flex items-center">
                    <svg fill="currentColor" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-4 h-4 text-yellow-pp" viewBox="0 0 24 24">
                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
                    </svg>
                    <svg fill="currentColor" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-4 h-4 text-yellow-pp" viewBox="0 0 24 24">
                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
                    </svg>
                    <svg fill="currentColor" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-4 h-4 text-yellow-pp" viewBox="0 0 24 24">
                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
                    </svg>
                    <svg fill="currentColor" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-4 h-4 text-yellow-pp" viewBox="0 0 24 24">
                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
                    </svg>
                    <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-4 h-4 text-yellow-pp" viewBox="0 0 24 24">
                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
                    </svg>
                    <span class="text-gray-600 ml-3">4 Reviews</span>
                </span>
                <span class="flex ml-3 pl-3 py-2 border-l-2 border-gray-200">
                    <a href="https://www.facebook.com/parapaquetes" target="_blank" class="text-gray-500">
                    <svg fill="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-5 h-5" viewBox="0 0 24 24">
                        <path d="M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z"></path>
                    </svg>
                    </a>
                    <a href="https://twitter.com/parapaquetes" target="_blank" class="ml-2 text-gray-500">
                    <svg fill="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-5 h-5" viewBox="0 0 24 24">
                        <path d="M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z"></path>
                    </svg>
                    </a>
                    <a href="https://www.instagram.com/parapaquetes/" target="_blank" class="ml-2 text-gray-500">
                    <svg fill="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-5 h-5" viewBox="0 0 24 24">
                        <path d="M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z"></path>
                    </svg>
                    </a>
                </span>
                </div>
                <p class="leading-relaxed pb-8">Envía tus productos en nuestras cajas de cartón con pestañas especialmente diseñadas para envíos por paquetería, máxima protección a tus productos, reduce el riesgo de daño.</p>
                {%- comment -%} {% if validaciones != 'undefined' %}
                    {% for error in validaciones%}
                        <div class="flex p-4 mb-4 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800" role="alert">
                            <svg aria-hidden="true" class="flex-shrink-0 inline w-5 h-5 mr-3" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg>
                            <span class="sr-only">Info</span>
                            <div>
                                <span class="font-medium">Mensaje de error!</span> {{ error.msg }}
                            </div>
                        </div>
                {% endfor %}
                    {% endif %} {%- endcomment -%}
                <form>
                    <div class="block">
                    <div class="form-group mb-4">
                        <label class="form-label inline-block mb-2 text-gray-700">Tipo de Caja</label>
                        <div class="relative">
                            <select id="type_box" name="type_box" class="form-select appearance-none block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding bg-no-repeat border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none" aria-label="Default select example">
                                {% if valores.type_box == '26_ects_C'%}<option value="26_ects_C" selected>26 ECTs C</option> {% else %} <option value="26_ects_C">26 ECTs C</option> {% endif %}
                                {% if valores.type_box == '32_ects_C'%}<option value="32_ects_C" selected>32 ECTs C</option> {% else %} <option value="32_ects_C" selected>32 ECTs C</option> {% endif %}
                                {% if valores.type_box == '36_ects_BC'%}<option value="36_ects_BC" selected>36 ECTs BC</option> {% else %} <option value="36_ects_BC">36 ECTs BC</option> {% endif %}
                                {% if valores.type_box == '48_ects_BC'%}<option value="48_ects_BC" selected>48 ECTs BC</option> {% else %} <option value="48_ects_BC">48 ECTs BC</option> {% endif %}
                                {% if valores.type_box == '61_ects_BC'%}<option value="61_ects_BC" selected>61 ECTs BC</option> {% else %} <option value="61_ects_BC">61 ECTs BC</option> {% endif %}
                            </select>
                            <span class="absolute right-0 top-0 h-full w-10 text-center text-gray-600 pointer-events-none flex items-center justify-center">
                                <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-4 h-4" viewBox="0 0 24 24">
                                <path d="M6 9l6 6 6-6"></path>
                                </svg>
                            </span>
                            {% if validaciones != 'undefined' %}
                            {% for error in validaciones%}
                                {% if error.param == 'type_box' %}
                                        <div class="text-sm text-red-700 dark:text-red-800">
                                            <i class="fa-solid fa-circle-info"></i> <span>{{ error.msg }}</span>
                                        </div>
                                    {% endif %}
                            {% endfor%}
                        {% endif %}
                        </div>
                    </div>
                    <div class="form-group mb-4">
                        <label class="form-label inline-block mb-2 text-gray-700">Largo</label>
                        <input type="number" step="any" id="largo" name="largo" class="form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none" value="{{valores.largo}}" />
                        {% if validaciones != 'undefined' %}
                            {% for error in validaciones%}
                                {% if error.param == 'largo' %}
                                        <div class="text-sm text-red-700 dark:text-red-800">
                                            <i class="fa-solid fa-circle-info"></i> <span>{{ error.msg }}</span>
                                        </div>
                                    {% endif %}
                            {% endfor%}
                        {% endif %}
                    </div>
                    <div class="form-group mb-4">
                        <label class="form-label inline-block mb-2 text-gray-700">Ancho</label>
                        <input type="number" step="any" id="ancho" name="ancho" class="form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none" value="{{valores.ancho}}"/>
                        {% if validaciones != 'undefined' %}
                            {% for error in validaciones%}
                                {% if error.param == 'ancho' %}
                                        <div class="text-sm text-red-700 dark:text-red-800">
                                            <i class="fa-solid fa-circle-info"></i> <span>{{ error.msg }}</span>
                                        </div>
                                    {% endif %}
                            {% endfor%}
                        {% endif %}
                    </div>
                    <div class="form-group mb-4">
                        <label class="form-label inline-block mb-2 text-gray-700">Altura</label>
                        <input type="number" step="any" id="alto" name="alto" class="form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none" value="{{valores.alto}}"/>
                        {% if validaciones != 'undefined' %}
                            {% for error in validaciones%}
                                {% if error.param == 'alto' %}
                                        <div class="text-sm text-red-700 dark:text-red-800">
                                            <i class="fa-solid fa-circle-info"></i> <span>{{ error.msg }}</span>
                                        </div>
                                    {% endif %}
                            {% endfor%}
                        {% endif %}
                    </div>
                    </div>
                    {%- comment -%}<div class="flex justify-start">
                    <div class="title-font font-medium text-lg text-gray-900">Area: <strong id="area_total">{{valores.area}}</strong></div>
                    <div class="title-font font-medium text-lg text-gray-900">Peso volumetrico: <strong id="peso_volumetrico">{{valores.peso_volumetrico}}</strong></div>
                    <div class="title-font font-medium text-lg text-gray-900">Total sin IVA: <strong id="costo_sin_iva">{{valores.precio_sin_iva}}</strong></div>
                    <div class="flex">
                    <span class="title-font font-medium text-2xl text-gray-900">Total con IVA: <strong class="text-red-500" id="costo_con_iva">{{valores.precio_con_iva}}</strong></span>
                        <button type="submit" class="text-white bg-blue-pp border-0 py-3 px-8 focus:outline-none hover:bg-blue-900 rounded font-semibold"><i class="fa-solid fa-box pr-1"></i> Cotizar</button>
                    </div>{%- endcomment -%}
                    <div class="title-font font-medium text-lg text-gray-900">Area: <strong id="area_total">{{valores.area}}</strong></div>
                    <div class="title-font font-medium text-lg text-gray-900">Peso volumetrico: <strong id="peso_volumetrico">{{valores.peso_volumetrico}}</strong></div>
                    <div class="title-font font-medium text-lg text-gray-900">Total sin IVA: <strong id="costo_sin_iva">{{valores.precio_sin_iva}}</strong></div>
                    <div class="flex">
                    <span class="title-font font-medium text-2xl text-gray-900">Total con IVA: <strong class="text-red-500" id="costo_con_iva">{{valores.precio_con_iva}}</strong></span>
                        <button type="submit" class="ml-auto text-white bg-blue-pp border-0 py-2 px-8 focus:outline-none hover:bg-blue-900 rounded"><i class="fa-solid fa-box"></i> Cotizar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    </section>
    <script>     
        document.addEventListener("submit", async (e) => {
            e.preventDefault()
            var largo = parseFloat(e.target.largo.value)
            const elemCostoSinIva = document.getElementById("costo_sin_iva")
            const elemCostoConIva = document.getElementById("costo_con_iva")
            var alto =  parseFloat(e.target.alto.value)
            var ancho = parseFloat(e.target.ancho.value)
            var type_box = e.target.type_box.value
            let type_box_value;
            switch (type_box) {
                case '26_ects_C': 
                    type_box_value = 16.41;
                break;
                case '32_ects_C': 
                    type_box_value= 19.11;
                break;
                case '36_ects_BC': 
                    type_box_value= 23.54;
                break;
                case '48_ects_BC': 
                    type_box_value= 28.18;
                break;
                case '61_ects_BC': 
                    type_box_value= 34.88;
                break;
            }
                
            fetch('/calculator', {
                method: 'POST',
                body: JSON.stringify({
                type_box, 
                type_box_value,
                alto, 
                largo,
                ancho,
                precio_con_iva: priceWithIVA(type_box_value, parseFloat(alto), parseFloat(largo), parseFloat(ancho)),
                precio_sin_iva: priceWithoutIVA(type_box_value, parseFloat(alto), parseFloat(largo), parseFloat(ancho)),
                area: squareArea(parseFloat(alto), parseFloat(largo), parseFloat(ancho)),
                peso_volumetrico: volumetricWeight(parseFloat(alto), parseFloat(largo), parseFloat(ancho)),
                largo_pliego_cm: lengthTotalSheetCentimeters(parseFloat(largo), parseFloat(ancho)),
                ancho_pliego_cm: widthTotalSheetCentimeters(parseFloat(ancho), parseFloat(alto)),
                largo_pliego_mm: lengthTotalSheetMilimeters(parseFloat(largo), parseFloat(ancho)),
                ancho_pliego_mm: widthTotalSheetMilimeters(parseFloat(ancho), parseFloat(alto)),
            }),
                headers: {'Content-Type': 'application/json' }
            })
           .then(response => response.json()) 
            .then(json => 
                console.log( json )
                /*const = { valores } = json
                const = {precio_con_iva, precio_sin_iva, peso_volumetrico, area } = valores 
                elemCostoConIva.innerText = precio_con_iva
                elemCostoSinIva.innerText = precio_sin_iva
                elemPesoVolumetrico.innerText = peso_volumetrico
                elemAreaTotal.innerText = area*/
            )
            .catch(err => console.log(err));
         })

        function lengthTotalSheetCentimeters(largo, ancho) {
            const largo_total_pliego = ((largo*2)+(ancho*2)+6)
            return largo_total_pliego
        }

        function lengthTotalSheetMilimeters(largo, ancho) {
            const largo1_extra = 5
            const largo2_extra = 3
            const largo_ceja = 35
            const largo1_pliego = ((largo * 10) +  largo1_extra)
            const largo2_pliego = ((ancho * 10) + largo2_extra)
            const length_total_sheet_milimeters = ((largo1_pliego * 2 ) + (largo2_pliego * 2)) + largo_ceja
            const data_length_total_sheet_milimeters = {
                largo1_pliego,
                largo2_pliego,
                largo1_extra,
                largo2_extra,
                largo_ceja,
                length_total_sheet_milimeters
            }
            return data_length_total_sheet_milimeters
        }

        function widthTotalSheetMilimeters(ancho, alto) {
            const ancho1_pliego = ((alto * 10) +  9)
            const ancho2_pliego = ((ancho * 5) + 4)
            const width_total_sheet_milimeters = ancho1_pliego + (ancho2_pliego * 2)
            const data_length_total_sheet_milimeters = {
                ancho1_pliego,
                ancho2_pliego,
                width_total_sheet_milimeters
            }
            return data_length_total_sheet_milimeters
        }

        function widthTotalSheetCentimeters(ancho, alto) {
            const ancho_total_pliego = ancho * alto + 3
            return ancho_total_pliego
        }

        function priceWithIVA(type_box_value, alto, largo, ancho) {
            const price_with_iva = ((((((largo * 10)* 2) + 10) + (((((ancho*10)*2)+6))+35)) * (((((alto*10)+9)+((alto*10)+8))/1000000) * type_box_value)) * 1.16);
            return `$ ${price_with_iva.toFixed(2)}`
        }

        function priceWithoutIVA(type_box_value, alto, largo, ancho) {
            const price_without_iva = (((((largo * 10)* 2) + 10) + (((((ancho*10)*2)+6))+35)) * (((((alto*10)+9)+((alto*10)+8))/1000000) * type_box_value));
            return `$ ${price_without_iva.toFixed(2)}`
        }

        function squareArea(alto, largo, ancho) {
            const square_area =(((((largo * 10)* 2) + 10) + (((((ancho*10)*2)+6))+35)) * ((((alto*10)+9)+((alto*10)+8)))/1000000);
            return `${square_area} m2`
        }

        function volumetricWeight(alto, largo, ancho) {
            const volumetric_weight = (largo * ancho * alto)/ 5000;
            return `${parseInt(volumetric_weight)}`
        }
    </script>
{% endblock %}